# Kaan Kara√ßanta

.pos 0
        irmovq stack, %rsp
        call main
        halt

.pos 0x200
ele0:
        .quad 0x0005
        .quad ele1
ele1:
        .quad 0x000c
        .quad ele2
ele2:
        .quad 0x0010
        .quad ele3
ele3:
        .quad 0x001a
        .quad ele4
ele4:
        .quad 0x0030
        .quad ele5
ele5:
        .quad 0x0045
        .quad ele6
ele6:
        .quad 0x005e
        .quad 0


.pos 0x400
array:
        .quad 0
        .quad 0

main:
        irmovq ele0, %rdi
        irmovq array, %rsi
        irmovq $56, %rdx
        call addEle
        ret

addEle:
        rmmovq %rdx, (%rsi)

        andq %rdi, %rdi # test head
        je retHead # jump to return head

        mrmovq (%rdi), %r10
        subq %r10, %rdx
        jl retHead

        rrmovq %rdi, %r9
        jmp test


test:
        mrmovq 8(%r9), %r13
        rrmovq %rdx, %r14
	mrmovq (%r13), %r8
        andq %r13, %r13
        subq %r8, %r14
        jg greater
        jmp rt

greater:
        mrmovq 8(%r9), %r9
        jmp test

retHead:
        rmmovq %rdi, 8(%rsi)
        rrmovq %rsi, %rax
        ret
        
rt:
        mrmovq 8(%r9), %r12
        rmmovq %r12, 8(%rsi)
        rmmovq %rsi, 8(%r9)
        rrmovq %rdi, %rax
        ret

.pos 0x800
stack:

